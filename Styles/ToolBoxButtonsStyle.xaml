<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Проекты_8_9_Классы.Styles"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks">

    <Style x:Key="Button_toolBox_close" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent"
                            BorderBrush="{DynamicResource HighLight}"
                            CornerRadius="3,0,0,3"
                            BorderThickness="2"
                            Name="BaseBorder">
                        <iconPacks:PackIconMaterial Kind="Close"
                                                    Foreground="{DynamicResource HighLight}"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center"
                                                    x:Name="Icon"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BaseBorder" Property="Background" Value="{DynamicResource BackColor}"/>
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource LightHighLight}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="BaseBorder" Property="Background" Value="{DynamicResource HighLight}"/>
                            <Setter TargetName="Icon" Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BaseBorder" Property="Background" Value="{DynamicResource DarkHightLight}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Button_toolBox_Max" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent"
                            BorderBrush="{DynamicResource HighLight}"
                            BorderThickness="2"
                            x:Name="BaseBorder">
                        <iconPacks:PackIconMaterial Kind="WindowMaximize"
                                                Foreground="{DynamicResource HighLight}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                    x:Name="Icon"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BaseBorder" Property="Background" Value="{DynamicResource BackColor}"/>
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource LightHighLight}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="BaseBorder" Property="Background" Value="{DynamicResource HighLight}"/>
                            <Setter TargetName="Icon" Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BaseBorder" Property="Background" Value="{DynamicResource DarkHightLight}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            
  
        </Style.Triggers>
    </Style>

    <Style x:Key="Button_toolBox_Min" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent"
                            BorderBrush="{DynamicResource HighLight}"
                            BorderThickness="2"
                            CornerRadius="0,3,3,0"
                            Name="BaseBorder">
                        <iconPacks:PackIconMaterial Kind="WindowMinimize"
                                                    Foreground="{DynamicResource HighLight}"
                                                    Margin="0,8,0,0"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center"
                                                    x:Name="Icon"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BaseBorder" Property="Background" Value="{DynamicResource BackColor}"/>
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource LightHighLight}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="BaseBorder" Property="Background" Value="{DynamicResource HighLight}"/>
                            <Setter TargetName="Icon" Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BaseBorder" Property="Background" Value="{DynamicResource DarkHightLight}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>